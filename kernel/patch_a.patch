diff --git a/arch/arm/configs/goldfish_armv7_defconfig b/arch/arm/configs/goldfish_armv7_defconfig
index 4da6dfb..94a34dd 100644
--- a/arch/arm/configs/goldfish_armv7_defconfig
+++ b/arch/arm/configs/goldfish_armv7_defconfig
@@ -106,7 +106,11 @@ CONFIG_HAVE_GENERIC_DMA_COHERENT=y
 CONFIG_SLABINFO=y
 CONFIG_RT_MUTEXES=y
 CONFIG_BASE_SMALL=0
-# CONFIG_MODULES is not set
+CONFIG_MODULES=y
+CONFIG_MODULE_FORCE_LOAD=y
+CONFIG_MODULE_UNLOAD=y
+CONFIG_MODVERSIONS=y
+CONFIG_MODULE_SRCVERSION_ALL=y
 CONFIG_BLOCK=y
 # CONFIG_LBD is not set
 # CONFIG_BLK_DEV_IO_TRACE is not set
diff --git a/arch/arm/include/asm/unistd.h b/arch/arm/include/asm/unistd.h
index 0106184..fced396 100644
--- a/arch/arm/include/asm/unistd.h
+++ b/arch/arm/include/asm/unistd.h
@@ -388,6 +388,23 @@
 #define __NR_pipe2			(__NR_SYSCALL_BASE+359)
 #define __NR_inotify_init1		(__NR_SYSCALL_BASE+360)
 
+//==== SEAL
+
+#define __NR_seal			(__NR_SYSCALL_BASE+361)
+#define __NR_is_sealed                  (__NR_SYSCALL_BASE+362)
+#define __NR_sld_create_key             (__NR_SYSCALL_BASE+363)
+#define __NR_sld_open                   (__NR_SYSCALL_BASE+364)
+#define __NR_sld_ssl_connect            (__NR_SYSCALL_BASE+365)
+#define __NR_sld_ssl_read               (__NR_SYSCALL_BASE+366)
+#define __NR_sld_ssl_write              (__NR_SYSCALL_BASE+367)
+#define __NR_sld_ssl_disconnect         (__NR_SYSCALL_BASE+368)
+#define __NR_sld_post                   (__NR_SYSCALL_BASE+369)
+#define __NR_sld_put                    (__NR_SYSCALL_BASE+370)
+#define __NR_sld_get                    (__NR_SYSCALL_BASE+371)
+#define __NR_sld_delete                 (__NR_SYSCALL_BASE+372)
+
+//====
+
 /*
  * The following SWIs are ARM private.
  */
diff --git a/arch/arm/kernel/calls.S b/arch/arm/kernel/calls.S
index 9ca8d13..ca615f8 100644
--- a/arch/arm/kernel/calls.S
+++ b/arch/arm/kernel/calls.S
@@ -370,6 +370,18 @@
 		CALL(sys_dup3)
 		CALL(sys_pipe2)
 /* 360 */	CALL(sys_inotify_init1)
+		CALL(sys_seal)
+		CALL(sys_is_sealed)
+		CALL(sys_sld_create_key)
+		CALL(sys_sld_open)
+/* 365 */	CALL(sys_sld_ssl_connect)
+                CALL(sys_sld_ssl_read)
+                CALL(sys_sld_ssl_write)
+                CALL(sys_sld_ssl_disconnect)
+                CALL(sys_sld_post)
+/* 370 */       CALL(sys_sld_put)
+                CALL(sys_sld_get)
+/* 372 */       CALL(sys_sld_delete)		
 #ifndef syscalls_counted
 .equ syscalls_padding, ((NR_syscalls + 3) & ~3) - NR_syscalls
 #define syscalls_counted
diff --git a/include/linux/syscalls.h b/include/linux/syscalls.h
index f9f900c..cac3c1c 100644
--- a/include/linux/syscalls.h
+++ b/include/linux/syscalls.h
@@ -56,6 +56,11 @@ struct robust_list_head;
 struct getcpu_cache;
 struct old_linux_dirent;
 
+//==== SEAL
+struct sld_key_alias;
+struct sld_conn_handler;
+//==== END SEAL
+
 #include <linux/types.h>
 #include <linux/aio_abi.h>
 #include <linux/capability.h>
@@ -694,4 +699,30 @@ asmlinkage long sys_pipe(int __user *);
 
 int kernel_execve(const char *filename, char *const argv[], char *const envp[]);
 
+//==== SEAL APP
+
+asmlinkage long sys_seal(void);
+asmlinkage long sys_is_sealed(void);
+asmlinkage long sys_sld_create_key(const struct sld_key_alias __user *);
+asmlinkage long sys_sld_open(const char __user *filename,
+                                int flags, const struct sld_key_alias __user *);
+asmlinkage long sys_sld_ssl_connect(const char __user *servername, 
+        const struct sld_key_alias __user *,
+        const struct sld_conn_handler __user *);
+asmlinkage long sys_sld_ssl_read(const struct sld_conn_handler __user *,
+        char __user *buf);
+asmlinkage long sys_sld_ssl_write(const struct sld_conn_handler __user *,
+                                char __user *buf);
+asmlinkage long sys_sld_ssl_disconnect(const struct sld_conn_handler __user *);
+asmlinkage long sys_sld_post(const struct sld_conn_handler __user *,
+                                char __user *buf, char __user *response);
+asmlinkage long sys_sld_put(const struct sld_conn_handler __user *,
+                                char __user *buf, char __user *response);
+asmlinkage long sys_sld_get(const struct sld_conn_handler __user *,
+                                char __user *buf, char __user *response);
+asmlinkage long sys_sld_delete(const struct sld_conn_handler __user *,
+                                char __user *buf, char __user *response);
+
+//====
+
 #endif
diff --git a/kernel/Makefile b/kernel/Makefile
index e4791b3..6160485 100644
--- a/kernel/Makefile
+++ b/kernel/Makefile
@@ -10,7 +10,7 @@ obj-y     = sched.o fork.o exec_domain.o panic.o printk.o \
 	    kthread.o wait.o kfifo.o sys_ni.o posix-cpu-timers.o mutex.o \
 	    hrtimer.o rwsem.o nsproxy.o srcu.o semaphore.o \
 	    notifier.o ksysfs.o pm_qos_params.o sched_clock.o cred.o \
-	    async.o
+	    async.o sld_impl.o
 
 ifdef CONFIG_FUNCTION_TRACER
 # Do not trace debug files and internal ftrace files
